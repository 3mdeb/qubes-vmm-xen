From 448c03b3cbe14873ee637755a29ea26ee7ca9ef9 Mon Sep 17 00:00:00 2001
From: Juergen Gross <jgross@suse.com>
Date: Mon, 26 Feb 2018 09:46:12 +0100
Subject: [PATCH] tools/xenstore: try to get minimum thread stack size for
 watch thread

When creating a pthread in xs_watch() try to get the minimal needed
size of the thread from glibc instead of using a constant. This avoids
problems when the library is used in programs with large per-thread
memory.

Use dlsym() to get the pointer to __pthread_get_minstack() in order to
avoid linkage problems and fall back to the current constant size if
not found.

Signed-off-by: Juergen Gross <jgross@suse.com>
Reviewed-by: Wei Liu <wei.liu2@citrix.com>
Acked-by: Ian Jackson <ian.jackson@eu.citrix.com>
Tested-by: Jim Fehlig <jfehlig@suse.com>
---
 tools/xenstore/Makefile |  4 ++++
 tools/xenstore/xs.c     | 21 ++++++++++++++++++++-
 2 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/tools/xenstore/Makefile b/tools/xenstore/Makefile
index 2b99d2bc1b..0831be0b6f 100644
--- a/tools/xenstore/Makefile
+++ b/tools/xenstore/Makefile
@@ -100,6 +100,10 @@ libxenstore.so.$(MAJOR): libxenstore.so.$(MAJOR).$(MINOR)
 	ln -sf $< $@
 
 xs.opic: CFLAGS += -DUSE_PTHREAD
+ifeq ($(CONFIG_Linux),y)
+xs.opic: CFLAGS += -DUSE_DLSYM
+libxenstore.so.$(MAJOR).$(MINOR): LDFLAGS += -ldl
+endif
 
 libxenstore.so.$(MAJOR).$(MINOR): xs.opic xs_lib.opic
 	$(CC) $(LDFLAGS) $(PTHREAD_LDFLAGS) -Wl,$(SONAME_LDFLAG) -Wl,libxenstore.so.$(MAJOR) $(SHLIB_LDFLAGS) -o $@ $^ $(SOCKET_LIBS) $(PTHREAD_LIBS) $(APPEND_LDFLAGS)
diff --git a/tools/xenstore/xs.c b/tools/xenstore/xs.c
index abffd9cd80..77700bff2b 100644
--- a/tools/xenstore/xs.c
+++ b/tools/xenstore/xs.c
@@ -16,6 +16,8 @@
     License along with this library; If not, see <http://www.gnu.org/licenses/>.
 */
 
+#define _GNU_SOURCE
+
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -47,6 +49,10 @@ struct xs_stored_msg {
 
 #include <pthread.h>
 
+#ifdef USE_DLSYM
+#include <dlfcn.h>
+#endif
+
 struct xs_handle {
 	/* Communications channel to xenstore daemon. */
 	int fd;
@@ -810,12 +816,25 @@ bool xs_watch(struct xs_handle *h, const char *path, const char *token)
 	if (!h->read_thr_exists) {
 		sigset_t set, old_set;
 		pthread_attr_t attr;
+		static size_t stack_size;
+#ifdef USE_DLSYM
+		size_t (*getsz)(pthread_attr_t *attr);
+#endif
 
 		if (pthread_attr_init(&attr) != 0) {
 			mutex_unlock(&h->request_mutex);
 			return false;
 		}
-		if (pthread_attr_setstacksize(&attr, READ_THREAD_STACKSIZE) != 0) {
+		if (!stack_size) {
+#ifdef USE_DLSYM
+			getsz = dlsym(RTLD_DEFAULT, "__pthread_get_minstack");
+			if (getsz)
+				stack_size = getsz(&attr);
+#endif
+			if (stack_size < READ_THREAD_STACKSIZE)
+				stack_size = READ_THREAD_STACKSIZE;
+		}
+		if (pthread_attr_setstacksize(&attr, stack_size) != 0) {
 			pthread_attr_destroy(&attr);
 			mutex_unlock(&h->request_mutex);
 			return false;
-- 
2.17.1

