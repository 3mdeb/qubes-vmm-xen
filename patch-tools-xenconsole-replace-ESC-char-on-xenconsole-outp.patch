From 8f6476bce136e638f74d16d5ad7edc5518679914 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Sun, 10 Feb 2019 02:11:50 +0100
Subject: [PATCH] tools/xenconsole: replace ESC char on xenconsole output by
 default
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Organization: Invisible Things Lab
Cc: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>

And add --no-replace-escape option to disable it.
This is done to prevent domU from exploiting hypothetical bug in
terminal emulator.

Add an -r/--no-replace-escape option to xenconsole client to disable
replacing ESC. Carry it from xl command through env variable.

Signed-off-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
---
 tools/console/client/main.c | 21 ++++++++++++++++++---
 tools/libxl/xl_cmdimpl.c    |  8 +++++++-
 tools/libxl/xl_cmdtable.c   |  3 ++-
 3 files changed, 27 insertions(+), 5 deletions(-)

diff --git a/tools/console/client/main.c b/tools/console/client/main.c
index 977779f034..9568a8b628 100644
--- a/tools/console/client/main.c
+++ b/tools/console/client/main.c
@@ -78,6 +78,7 @@ static void usage(const char *program) {
 	       "  -n, --num N      use console number N\n"
 	       "  --type TYPE      console type. must be 'pv' or 'serial'\n"
 	       "  --start-notify-fd N file descriptor used to notify parent\n"
+	       "  -r, --no-replace-escape Do not replace ESC character with dot\n"
 	       , program);
 }
 
@@ -175,7 +176,7 @@ static void restore_term(int fd, struct termios *old)
 }
 
 static int console_loop(int fd, struct xs_handle *xs, char *pty_path,
-		        bool interactive)
+		        bool interactive, bool replace_escape)
 {
 	int ret, xs_fd = xs_fileno(xs), max_fd = -1;
 
@@ -249,6 +250,12 @@ static int console_loop(int fd, struct xs_handle *xs, char *pty_path,
 				fd = -1;
 				continue;
 			}
+			if (replace_escape) {
+				int i;
+				for (i = 0; i < len; i++)
+					if (msg[i] == '\033')
+						msg[i] = '.';
+			}
 
 			if (!write_sync(STDOUT_FILENO, msg, len)) {
 				perror("write() failed");
@@ -324,7 +331,7 @@ int main(int argc, char **argv)
 {
 	struct termios attr;
 	int domid;
-	char *sopt = "hn:";
+	char *sopt = "hn:r";
 	int ch;
 	unsigned int num = 0;
 	int opt_ind=0;
@@ -334,6 +341,7 @@ int main(int argc, char **argv)
 		{ "num",     1, 0, 'n' },
 		{ "help",    0, 0, 'h' },
 		{ "start-notify-fd", 1, 0, 's' },
+		{ "no-replace-escape", 0, 0, 'r' },
 		{ 0 },
 
 	};
@@ -343,10 +351,14 @@ int main(int argc, char **argv)
 	char *end;
 	console_type type = CONSOLE_INVAL;
 	bool interactive = 0;
+	bool replace_escape = 1;
 
 	if (isatty(STDIN_FILENO) && isatty(STDOUT_FILENO))
 		interactive = 1;
 
+	if (getenv("XEN_CONSOLE_REPLACE_ESCAPE"))
+		replace_escape = atoi(getenv("XEN_CONSOLE_REPLACE_ESCAPE"));
+
 	while((ch = getopt_long(argc, argv, sopt, lopt, &opt_ind)) != -1) {
 		switch(ch) {
 		case 'h':
@@ -370,6 +382,9 @@ int main(int argc, char **argv)
 		case 's':
 			start_notify_fd = atoi(optarg);
 			break;
+		case 'r':
+			replace_escape = 0;
+			break;
 		default:
 			fprintf(stderr, "Invalid argument\n");
 			fprintf(stderr, "Try `%s --help' for more information.\n", 
@@ -484,7 +499,7 @@ int main(int argc, char **argv)
 		close(start_notify_fd);
 	}
 
-	console_loop(spty, xs, path, interactive);
+	console_loop(spty, xs, path, interactive, replace_escape);
 
 	free(path);
 	free(dom_path);
diff --git a/tools/libxl/xl_cmdimpl.c b/tools/libxl/xl_cmdimpl.c
index 3adb45e3ae..3f470301d3 100644
--- a/tools/libxl/xl_cmdimpl.c
+++ b/tools/libxl/xl_cmdimpl.c
@@ -3805,8 +3805,9 @@ int main_console(int argc, char **argv)
     uint32_t domid;
     int opt = 0, num = 0;
     libxl_console_type type = 0;
+    bool replace_escape = true;
 
-    SWITCH_FOREACH_OPT(opt, "n:t:", NULL, "console", 1) {
+    SWITCH_FOREACH_OPT(opt, "n:t:r", NULL, "console", 1) {
     case 't':
         if (!strcmp(optarg, "pv"))
             type = LIBXL_CONSOLE_TYPE_PV;
@@ -3820,8 +3821,13 @@ int main_console(int argc, char **argv)
     case 'n':
         num = atoi(optarg);
         break;
+    case 'r':
+        replace_escape = false;
+        break;
     }
 
+    setenv("XEN_CONSOLE_REPLACE_ESCAPE", replace_escape ? "1" : "0", 1);
+
     domid = find_domain(argv[optind]);
     if (!type)
         libxl_primary_console_exec(ctx, domid, -1);
diff --git a/tools/libxl/xl_cmdtable.c b/tools/libxl/xl_cmdtable.c
index 132cf6b2c9..57d54cbac8 100644
--- a/tools/libxl/xl_cmdtable.c
+++ b/tools/libxl/xl_cmdtable.c
@@ -135,7 +135,8 @@ struct cmd_spec cmd_table[] = {
       "Attach to domain's console",
       "[options] <Domain>\n"
       "-t <type>       console type, pv or serial\n"
-      "-n <number>     console number"
+      "-n <number>     console number\n"
+      "-r              do not replace ESC character with dot\n"
     },
     { "vncviewer",
       &main_vncviewer, 0, 0,
-- 
2.17.2

